# More responsive tmux
set -s escape-time 1

# Make the prefix action key be <C-A> which is more "ergonomic" than <C-B>
set -g prefix C-a

# Make sure we can send the prefix key to the inner application
bind -r C-a send-prefix

# Make switching windows with <C-A><C-A>
# bind-key C-a last-window

# Use reattach-to-user-namespace
set -g default-command "/usr/local/bin/reattach-to-user-namespace -l /usr/local/bin/zsh"
set -g default-terminal "screen-256color"
set -g set-clipboard on

# Tmux message stick for a little while
set -g display-time 3000

# Let the window name stay forever
setw -g automatic-rename on

# Shortcut to reload tmux config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind C-r source-file ~/.tmux.conf \; display "Reloaded!"

# Make tmux a 1 based instead of 0 bases
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Handling mouse
set -g mouse on

# Set status bar
set -g status-interval 2

set -g status-bg default
set -g status-fg white
# Extra info
set -g status-left-length 50
set -g status-left '#[fg=green](#U@#H)'
set -g status-right '#[fg=yellow]#(bat_label=`~/.tmux/scripts/battery Discharging`; if [ -z "$bat_label" ]; then ~/.tmux/scripts/battery Charging; else echo $bat_label;fi)    %a, %b %d   %Rh '
# Normal windows
setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-attr dim
setw -g window-status-format " #I:#W#(~/.tmux/scripts/window-flags '#{window_flags}') "
# Activity windows
setw -g window-status-activity-fg yellow
setw -g window-status-activity-attr bright,underscore
setw -g window-status-bell-fg yellow
setw -g window-status-bell-attr bright,underscore
# Highlight current window
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
setw -g window-status-current-format " #[fg=yellow,bold]#I:#[fg=default]#W#(~/.tmux/scripts/window-flags '#{window_flags}') "
# Pane configuration
set -g pane-border-bg default
set -g pane-border-fg white
set -g pane-active-border-bg default
set -g pane-active-border-fg yellow
# Message line
set -g message-bg yellow
set -g message-fg black
#set -g message-attr reverse
# Centering windows
set -g status-justify centre

# Vim mode!
setw -g mode-keys vi

# From now on all that remains are key mappings

# remove default binding since we're replacing
unbind C-b
unbind %
unbind Left
unbind Right
unbind Down
unbind Up

# Some Vim behaviors
# Split windows like vim
bind v split-window -h -c '#{pane_current_path}'
bind C-v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
bind C-s split-window -v -c '#{pane_current_path}'
# Window navigation
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# Pane navigation
# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Session navigation
bind -r ( switch-client -p
bind -r ) switch-client -n
# Fuzzy matching session navigation via fzf utility instead of the default "choose-tree"
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --exit-0 | xargs tmux switch-client -t"
# Copy mode
bind Escape copy-mode
bind p paste-buffer
bind y send-keys y \; run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "copied"
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi C-v send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi 'q' send -X cancel
bind-key -Tcopy-mode-vi Escape send -X cancel
# Resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
# Allow bigger resize
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Windows bindings
bind ] next-window
bind [ previous-window
bind -n C-Tab next-window
bind -n C-S-Tab previous-window

bind c new-window -c '#{pane_current_path}'
# Make possible to create named windows
bind C command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"
bind C-c command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"

# Trigger monitor activity
bind m setw monitor-activity on \; display-message "Will monitor window for activity..."
bind M setw monitor-activity off \; display-message "Stop monitoring window for activity!"
# Trigger monitor silence
bind n setw monitor-silence 10 \; display-message "Will monitor window for silence..."
bind N setw monitor-silence 0 \; display-message "Stop monitoring window for silence!"

# Transform a pane into a window
bind b break-pane -d
bind B break-pane
# And joing them back
bind j command-prompt -p "Join pane from window: " "join-pane -h -s '%%'"

# Swap panes
bind w display-panes\; command-prompt -p "Pane # to swap with: " "swap-pane -t '%%'"

# Rotate panes
bind @ rotate-window

# "break session" and "kill session" without exiting tmux
bind C-b send-keys 'tat && exit' 'C-m'
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Helpers
# Show htop on left
bind t split-window -h "htop"
# Shortcut to open my brazil box on the left side panel
bind u new-window -n "Ubuntu" -d "ssh -o CompressionLevel=9 -c arcfour,blowfish-cbc -YC thiagoa@work-ubuntu"
# Shortcut to open my personal website ssh
bind g new-window -n "Webfaction" -d "ssh -o CompressionLevel=9 -c arcfour,blowfish-cbc -YC thiago@thiagoalves.com.br"
# Open WeeChat on a new window
bind i new-window -n "WeeChat" -d "weechat"

run-shell ~/.tmux/plugins/current-pane-hostname/current_pane_hostname.tmux